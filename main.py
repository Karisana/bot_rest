from datetime import datetime

import telebot
from telebot import types
import time
import random

import files_xl
from db import Database
from send import SendAdmin

bot = telebot.TeleBot('—Å—é–¥–∞ —Ç–æ–∫–µ–Ω')

# –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
db = Database('database.db')

# –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:
send = SendAdmin()


@bot.message_handler(content_types=['photo'])
# –∞–¥–º–∏–Ω –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, —Ñ—É–Ω–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å
def admin_send_photo(message):
    # print(message.photo.file_id)
    if message.chat.type == 'private':
        if message.from_user.id == 1020629:
            photo = max(message.photo, key=lambda x: x.height)
            send.get_img(photo.file_id)


@bot.message_handler(commands=['adminsendlink'])
# –∞–¥–º–∏–Ω –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, —Ñ—É–Ω–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å
def admin_send_link(message):
    if message.chat.type == 'private':
        if message.from_user.id == 1020629:
            link = message.text
            send.get_link(link)
            print(send)


@bot.message_handler(commands=['adminsendtext'])
# –∞–¥–º–∏–Ω –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, —Ñ—É–Ω–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å
def admin_send_text(message):
    if message.chat.type == 'private':
        if message.from_user.id == 1020629:
            text = message.text
            send.get_text(text)


@bot.message_handler(commands=['adminsendall'])
# —Ñ—É–Ω –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ –±–¥
def send_all_mes(message):
    if message.chat.type == 'private':
        if message.from_user.id == 1020629:  # –∞–π–¥–∏ –∞–¥–º–∏–Ω–∞
            link = send.res_mes['link'][14:]
            text = send.res_mes['text'][14:]

            users = db.get_users()
            for row in users:
                time.sleep(1)
                try:
                    bot.send_photo(row[0], photo=send.res_mes['photo'])
                    bot.send_message(row[0], text)
                    bot.send_message(row[0], link)

                    if int(row[1]) != 1:
                        db.set_active(row[0],
                                      1)  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω, –Ω–æ –ø–æ–ª—É—á–∏–ª –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ –º–µ–Ω—è–µ–º –µ–º—É
                        # —Å—Ç–∞—Ç—É—Å –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–π
                    else:
                        db.set_active(row[0], 1)
                except:
                    db.set_active(row[1], 0)  # –Ω–µ –ø–æ–ª—É—á–∏–ª -  –º–µ–Ω—è–µ–º –Ω–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∞—Ç—É—Å
            bot.send_message(message.from_user.id, '–†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ—à–ª–∞')


# –º–µ–Ω—é
menu = ['–†–µ—Å—Ç–æ—Ä–∞–Ω—ã', '–ê–∫—Ü–∏–∏', '–î–æ—Å—Ç–∞–≤–∫–∞', '–°–∏—Å—Ç–µ–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏', '–ê—Ñ–∏—à–∞']
key_1 = types.KeyboardButton(menu[0])
key_2 = types.KeyboardButton(menu[1])
key_3 = types.KeyboardButton(menu[2])
key_4 = types.KeyboardButton(menu[3])
key_5 = types.KeyboardButton(menu[4])

markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
markup.add(key_1, key_2, key_3, key_4, key_5)

choice_menu = [['–°–µ–π—á–∞—Å –≤—Å—ë —Å–¥–µ–ª–∞–µ–º', '–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, –≤—Å—ë –±—É–¥–µ—Ç –∫—Ä—É—Ç–æ!'],
               ['–ò–ª—å—è –∫–ª–∞–¥–µ—Ç –±—É–º–∞–≥–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ä–µ—Å—Ç–∏–∫–æ–≤ –≤ —à–ª—è–ø—É', '–ú–µ—à–∞–µ—Ç - –º–µ—à–∞–µ—Ç - –º–µ—à–∞–µ—Ç...'],
               ['–û–ø—è—Ç—å –≤ —ç—Ç–∏ –≤–∞—à–∏ –∏–≥—Ä—É–ª—å–∫–∏ –∏–≥—Ä–∞–µ—Ç–µ? –ù—É –ª–∞–¥–Ω–æ...', '–í–µ–¥—ë—Ç—Å—è –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'],
               ['–ò–Ω–∏—Ü–∏–∏—Ä—É—é –ø–æ–∏—Å–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Ç–≤–æ–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞...', '–ì–¥–µ-–∂–µ –æ–Ω...'],
               ['(–í–æ—Ä—á–∏—Ç) –ê –º–æ–≥–ª–∏ –±—ã –Ω–∞ —Ä–∞–±–æ—Ç–µ –¥–µ–ª–æ–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è', '–í–µ–¥—ë—Ç—Å—è –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'],
               ['–≠–π, –∑–∞—á–µ–º —Ä–∞–∑–±—É–¥–∏–ª–∏...', '–°–µ–π—á–∞—Å - —Å–µ–π—á–∞—Å –≤—ã–±–µ—Ä—É –≤–∞–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ'],
               ['–°–∫–∞–Ω–∏—Ä—É—é...', '–í–µ–¥—ë—Ç—Å—è –≤—ã–±–æ—Ä...']]

promo = ['–ê–∫—Ü–∏–∏ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É', '–ê–∫—Ü–∏–∏ –Ω–∞ —Å–∞–º–æ–≤—ã–≤–æ–∑', '–ê–∫—Ü–∏–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö']

text_promo = '–£—á–∞—Å—Ç–∏–µ –≤ –∞–∫—Ü–∏—è—Ö –¥–æ—Å—Ç—É–ø–Ω–æ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç milimon.ru –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (846) ' \
             '2000-220. –ê–∫—Ü–∏–∏ –≤ –±–æ–Ω—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω–µ —É—á–∞—Å—Ç–≤—É—é—Ç. –ê–∫—Ü–∏–∏ –Ω–µ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º. '


def creation_menu(data, name_btm):
    menu_global = telebot.types.InlineKeyboardMarkup()

    count = 0
    for i_name in data:
        count += 1
        btm = name_btm + str(count)
        menu_global.add(telebot.types.InlineKeyboardButton(text=i_name, callback_data=btm))
    return menu_global


# —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞. –û–Ω–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç. –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.

@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.type == 'private':
        if not db.user_exists(message.from_user.id):
            try:
                db.add_user(message.from_user.id)
            except:
                pass
        mes = f'{message.from_user.first_name}, —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —á–∞—Ç-–±–æ—Ç–µ Milimon Family! ' \
              '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö, –∞–∫—Ü–∏—è—Ö, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –¥–æ—Å—Ç–∞–≤–∫–µ, —Å–∏—Å—Ç–µ–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ ' \
              '–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –±–æ—Ç–∞ –Ω–∏–∂–µ üëáüèª '

        bot.send_message(message.chat.id, mes, parse_mode='html')
        bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:', reply_markup=markup)


@bot.message_handler(commands=['help'])
# –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
def get_away(message):
    print('—Ö–µ–ª–ø')
    bot.send_message(message.chat.id, text='–ò —Å–Ω–æ–≤–∞ –≤—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ. –í—ã–±–∏—Ä–∞–π—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
# –ø–æ–∏—Å–∫ –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é (–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –ª–æ—è–ª—å–Ω–æ—Å—Ç—å –µ—Å—Ç—å)
def step_rest(message):
    if message.text == '–†–µ—Å—Ç–æ—Ä–∞–Ω—ã':
        markup_rest = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

        rest_1 = '–í—ã–±—Ä–∞—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é'
        rest_2 = '–£–¥–∏–≤–∏—Ç–µ –º–µ–Ω—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞ –º–µ–Ω—è!'
        away = '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        markup_rest.add(rest_1, rest_2, away)

        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –æ—Ç–≤–µ—Ç:', parse_mode='html', reply_markup=markup_rest)

    elif message.text == '–í—ã–±—Ä–∞—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é':
        bot.send_message(message.from_user.id,
                         text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º:',
                         parse_mode='MarkdownV2', reply_markup=files_xl.restaurants.btm())

    elif message.text == '–£–¥–∏–≤–∏—Ç–µ –º–µ–Ω—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞ –º–µ–Ω—è!':
        choice = random.choice(choice_menu)
        mes = f'<i>{choice[0]}</i>'
        bot.send_message(message.chat.id, mes, parse_mode='html')
        time.sleep(1)
        mes = f'<i>{choice[1]}</i>'
        bot.send_message(message.chat.id, mes, parse_mode='html')
        time.sleep(1)
        bot.send_message(message.chat.id, '–í—ã–±–æ—Ä –ø–∞–ª –Ω–∞: ')

        random_rest = random.choice(list(files_xl.restaurants.data))
        name = random_rest['name']
        menu = random_rest['menu']
        text = random_rest['info']
        adress = random_rest['adress']
        link = random_rest['link']
        number = random_rest['number']
        mes = f'<b>{name}</b>\n' \
              f'{menu}\n' \
              f'\n' \
              f'{text}\n' \
              f'\n' \
              f'<i>{adress}</i>\n' \
              f'<i>{number}</i>'
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', url=link, row_width=1))
        bot.send_message(message.chat.id, mes, reply_markup=markup, parse_mode='html')
    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        get_away(message)

    elif message.text == '–ê–∫—Ü–∏–∏':
        mes = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:'
        bot.send_message(message.from_user.id, text=mes,
                         reply_markup=creation_menu(promo, 'promo'))

    elif message.text == '–î–æ—Å—Ç–∞–≤–∫–∞':
        mes = '–ú—ã —É–∂–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω—è—Ç—å –≤–∞—à –∑–∞–∫–∞–∑! –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:'
        bot.send_message(message.from_user.id, text=mes,
                         reply_markup=files_xl.delivery.btm())

    elif message.text == '–°–∏—Å—Ç–µ–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏':
        mes = '<b>–ü—É—Ç—å –∫ —Å–µ—Ä–¥—Ü—É –≥–æ—Å—Ç–µ–π –º—ã –ø—Ä–æ–∫–ª–∞–¥—ã–≤–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ. –ù–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∂–µ–ª—É–¥–æ–∫.</b>\n' \
              '–ü–æ–º–∏–º–æ –µ–¥—ã –∏ –Ω–∞–ø–∏—Ç–∫–æ–≤, ' \
              '–≤ –Ω–∞—à–µ–º –∞—Ä—Å–µ–Ω–∞–ª–µ –º–Ω–æ–≥–æ –∞–º—É—Ä–Ω—ã—Ö —Å—Ç—Ä–µ–ª: –∏—Å–∫—Ä–µ–Ω–Ω–∏–π —Å–µ—Ä–≤–∏—Å, —É—é—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—å–µ—Ä, –∑–≤—É–∫, —Å–≤–µ—Ç, ' \
              '—Å–æ—á–Ω—ã–π –≤–∏–¥–µ–æ—Ä—è–¥... –ï—â—ë –æ–¥–Ω–æ–π —Å—Ç—Ä–µ–ª–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø–æ–∫–æ—Ä–∏—Ç—å –≤–∞—à–∏ —Å–µ—Ä–¥—Ü–∞ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –∏ ' \
              '–±–µ—Å–ø–æ–≤–æ—Ä–æ—Ç–Ω–æ, —Å—Ç–∞–Ω–µ—Ç —É–º–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏. '

        bot.send_message(message.from_user.id, text=mes, parse_mode='html',
                         reply_markup=files_xl.loyalty.btm())
    elif message.text == '–ê—Ñ–∏—à–∞':  # –¥–æ—Å—Ç–∞–≤–∫–∞
        mes = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:'
        bot.send_message(message.from_user.id, text=mes,
                         reply_markup=files_xl.afisha.btm())


@bot.callback_query_handler(func=lambda call: call.data.startswith('loyal'))
# –ø–æ–∏—Å–∫ –ø–æ —Å–∏—Å—Ç–µ–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
def step_loyal(call):
    markup = types.InlineKeyboardMarkup()
    mes = ''
    for i in files_xl.loyalty.data:
        if call.data == i['id']:
            mes = i['info']

    bot.send_message(call.from_user.id, mes, reply_markup=markup, parse_mode='html')


@bot.callback_query_handler(func=lambda call: call.data.startswith('rest'))
# –ø–æ–∏—Å–∫ –ø–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º
def step_rest(call):
    markup = types.InlineKeyboardMarkup()
    for i in files_xl.restaurants.data:

        if call.data == i['id']:
            name = i['name']
            info = i['info']
            site = i['link']
            adress = i['adress']  # –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –ª–æ–∫–∞—Ü–∏—é –ø–æ—Ç–æ–º
            number = i['number']
            mes = f'<b>{name}</b>\n' \
                  f'\n' \
                  f'{info}\n' \
                  f'\n' \
                  f'{adress}\n' \
                  f'\n' \
                  f'{number}'
            markup.add(types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', url=site, row_width=1))
            bot.send_message(call.from_user.id, mes, reply_markup=markup, parse_mode='html')


@bot.callback_query_handler(func=lambda call: call.data.startswith('12'))
def step_deli(call):
    markup = types.InlineKeyboardMarkup()
    for i in files_xl.delivery.data:
        if call.data == i['id']:
            mes = i['info']
            bot.send_message(call.from_user.id, mes, reply_markup=markup, parse_mode='html')


@bot.callback_query_handler(func=lambda call: call.data.startswith('promo'))
def step_promo(call):
    if call.data == 'promo1':
        bot.send_message(call.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ü–∏–π:',
                         reply_markup=files_xl.promo_del.btm())

    elif call.data == 'promo2':
        bot.send_message(call.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ü–∏–π:',
                         reply_markup=files_xl.promo_sam.btm())

    elif call.data == 'promo3':
        bot.send_message(call.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ü–∏–π:',
                         reply_markup=files_xl.promo_rest.btm())


@bot.callback_query_handler(func=lambda call: call.data.startswith('del'))
def step_promo_del(call):
    link = ''
    for i in files_xl.promo_del.data:
        if call.data == i['id']:
            name_promo = i['name_promo']
            info_promo = i['info_promo']
            tel = '+7 (846) 2000-220'
            line = '_' * 30
            if len(i['link']) > 2:
                link = i['link']
            mes = f'<b>{name_promo}</b>\n' \
                  f'\n{info_promo}\n ' \
                  f'{line}\n' \
                  f'<i>{tel}</i>'
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', url=link, row_width=1))
            bot.send_message(call.from_user.id, mes, parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('prsa'))
def step_promo_sam(call):
    markup = types.InlineKeyboardMarkup()
    for i in files_xl.promo_sam.data:
        if call.data == i['id']:
            name_promo = i['name_promo']
            info_promo = i['info_promo']
            address = i['adress']
            tel = '+7 (846) 2000-220'
            link = i['link']
            line = '_' * 30
            markup.add(types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', url=link, row_width=1))
            mes = f'<b>{name_promo}</b>\n\n{info_promo}\n {line}\n' \
                  f'–ó–∞–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑ –º–æ–∂–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:\n{address}\n\n{tel}'
            bot.send_message(call.from_user.id, mes, parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('prest'))
def step_promo_sam(call):
    markup = types.InlineKeyboardMarkup()
    for i in files_xl.promo_rest.data:
        if call.data == i['id']:
            name_promo = i['name_promo']
            info_promo = i['info_promo']
            address = i['adress']
            tel = '+7 (846) 2000-220'
            line = '_' * 30
            mes = f'<b>{name_promo}</b>\n\n{info_promo}.\n{line}\n–î–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ –∞–¥—Ä–µ—Å–∞–º:\n{address}\n\n{tel}'
            bot.send_message(call.from_user.id, mes, parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('afi'))
def step_promo_sam(call):
    markup = types.InlineKeyboardMarkup()
    for i in files_xl.afisha.data:
        if call.data == i['id']:
            date = str(i['date']).lower()
            name = i['name']
            info_promo = i['info']
            address = i['adress']
            number = i['number']
            line = '_' * 30
            mes = f'<i>–ú–µ—Å—è—Ü: {date}</i>\n<b>–†–µ—Å—Ç–æ—Ä–∞–Ω {name}</b>\n{address}\n\n{info_promo}\n\n{number}'
            bot.send_message(call.from_user.id, mes, parse_mode='html', reply_markup=markup)


bot.polling(none_stop=True)
